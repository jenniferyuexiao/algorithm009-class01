//69.sqrt(x)
class Solution {
    public int mySqrt(int x) {
      if (x < 2) return x;
  
      long num;
      int pivot, left = 2, right = x / 2;
      while (left <= right) {
        pivot = left + (right - left) / 2;
        num = (long)pivot * pivot;
        if (num > x) right = pivot - 1;
        else if (num < x) left = pivot + 1;
        else return pivot;
      }
  
      return right;
    }
  }

  //33.search in rotated sorted array
  class Solution {
    public int search(int[] nums, int target) {
      int start = 0, end = nums.length - 1;
      while (start <= end) {
        int mid = start + (end - start) / 2;
        if (nums[mid] == target) return mid;
        else if (nums[mid] >= nums[start]) {
          if (target >= nums[start] && target < nums[mid]) end = mid - 1;
          else start = mid + 1;
        }
        else {
          if (target <= nums[end] && target > nums[mid]) start = mid + 1;
          else end = mid - 1;
        }
      }
      return -1;
    }
  } 